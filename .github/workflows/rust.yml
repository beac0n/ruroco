name: Continuous Integration
permissions:
  contents: write

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'  # Trigger for any tag starting with 'v'
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:

  check:
    name: Check
    runs-on: ubuntu-22.04
    steps:
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --locked --verbose
      - name: Check without default features
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --locked --no-default-features --verbose

  typos:
    name: Typos
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check typos
        uses: crate-ci/typos@master

  test-end-to-end:
    name: Test end to end
    runs-on: ubuntu-22.04
    steps:
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run tests end to end
        run: make test_end_to_end

  test:
    name: Test
    runs-on: ubuntu-22.04
    steps:
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install cargo-binstall
        run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
      - name: Install nextest
        run: cargo binstall cargo-nextest --secure
      - name: Run tests
        run: cargo nextest run --retries 2

  coverage:
    name: Coverage
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install cargo-binstall
        run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
      - name: Install tarpaulin
        run: cargo binstall cargo-tarpaulin --secure
      - name: Generate code coverage
        run: make coverage
        env:
          RUST_BACKTRACE: 'full'
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          fail_ci_if_error: true

  format:
    name: Formatting and Lints
    runs-on: ubuntu-22.04
    steps:
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check the formatting
        uses: actions-rs/cargo@v1
        with:
          command: make format

  release:
    name: Create Release
    runs-on: ubuntu-22.04
    needs: [test, test-end-to-end]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache packages
        uses: actions/cache@v4
        with:
          path: |
            .nix-cargo-linux
            .nix-cargo-android
          key: "nix-cargo-linux-${{ hashFiles('**/Cargo.lock') }}"
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Extract Tag Name
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Make Release
        run: make release
      - name: Move Files
        run: |
          mv target/x/release/android/ruroco.apk client-${{ env.TAG_NAME }}-aarch64-linux-android.apk
          mv target/x86_64-unknown-linux-gnu/release/client client-${{ env.TAG_NAME }}-x86_64-linux
          mv target/x86_64-unknown-linux-gnu/release/client_ui client-ui-${{ env.TAG_NAME }}-x86_64-linux
          mv target/x86_64-unknown-linux-gnu/release/commander commander-${{ env.TAG_NAME }}-x86_64-linux
          mv target/x86_64-unknown-linux-gnu/release/server server-${{ env.TAG_NAME }}-x86_64-linux
      - name: Publish Release
        id: create_release
        run: |          
          gh release create ${{ env.TAG_NAME }} \
            client-${{ env.TAG_NAME }}-aarch64-linux-android.apk \
            client-${{ env.TAG_NAME }}-x86_64-linux \
            client-ui-${{ env.TAG_NAME }}-x86_64-linux \
            commander-${{ env.TAG_NAME }}-x86_64-linux \
            server-${{ env.TAG_NAME }}-x86_64-linux \
            --title "Release ${{ env.TAG_NAME }}" \
            --notes "See https://github.com/beac0n/ruroco/blob/master/CHANGELOG.md"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
